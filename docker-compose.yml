services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    env_file:
      - ./.env
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Application.Api/Dockerfile
    restart: always
    container_name: application_api
    env_file:
      - ./.env
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
